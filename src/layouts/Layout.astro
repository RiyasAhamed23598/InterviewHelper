---
import Header from '../components/Header.astro';
import Sidebar from '../components/Sidebar.astro';
import Search from '../components/Search.astro';
import GoogleAnalytics from '../components/GoogleAnalytics.astro';

interface Props {
  title?: string;
  description?: string;
  frontmatter?: {
    title?: string;
    description?: string;
    image?: string;
    canonicalURL?: string;
  };
  image?: string;
  canonicalURL?: string;
}

const {
  title: propTitle,
  description: propDescription,
  image = "https://res.cloudinary.com/dmcpsaspr/image/upload/w_1000,ar_16:9,c_fill,g_auto,e_sharpen/v1738256893/InterviewHelper/logo.webp",
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
  frontmatter
} = Astro.props;

const currentPath = Astro.url.pathname;
const isAuthPage = currentPath === '/login' || currentPath === '/register' || currentPath === '/profile' || currentPath.startsWith('/auth/');

const pageTitle = frontmatter?.title || propTitle || 'Interview Helper';
const description = frontmatter?.description || propDescription || "Master modern web development interviews with our comprehensive guide. Get expert insights on Angular, React, Node.js, .NET, TypeScript, and more.";
const metaTitle = `${pageTitle}`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <script is:inline>
      window.addEventListener('DOMContentLoaded', (event) => {
        const currentPath = window.location.pathname;
        const isAuthPage = currentPath === '/login' || currentPath === '/register' || currentPath.startsWith('/auth/');
        
        if (!isAuthPage) {
          const script1 = document.createElement('script');
          script1.src = '/pagefind/pagefind.js';
          script1.type = "module";
          document.head.appendChild(script1);

          const script2 = document.createElement('script');
          script2.src = '/pagefind/pagefind-ui.js';
          script2.type = "module";
          document.head.appendChild(script2);

          const link = document.createElement('link');
          link.rel = 'stylesheet';
          link.href = '/pagefind/pagefind-ui.css';
          document.head.appendChild(link);
        }
      });
    </script>
    <link rel="icon" type="image/png" href="/favicon.png" />

    <GoogleAnalytics />
    <title>{metaTitle}</title>
    <meta name="title" content={metaTitle} />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    <meta name="image" property="og:image" content={new URL(image, Astro.site)}>
    <meta name="author" content="SashiKumar Yadav">
    
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={metaTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.site)} />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={metaTitle} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.site)} />

    <meta name="keywords" content="interview preparation, tech interviews, coding interviews, programming questions, interview helper, technical interview guide" />
    <meta name="author" content="Interview Helper" />
    <meta name="robots" content="index, follow" />

    <meta name="theme-color" content="#4f46e5" />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.svg" type="image/svg+xml">

    <link
      rel="preload"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      as="style"
      onload="this.onload=null;this.rel='stylesheet'"
    />
    <noscript>
      <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      />
    </noscript>
    
    <meta name="generator" content={Astro.generator} />
  </head>
  <body class="bg-white dark:bg-gray-900 text-sm sm:text-base">
    <Header />
    
    <div class="pt-12 sm:pt-16 flex relative">
      {!isAuthPage && (
        <>
          <div id="sidebar-overlay" class="lg:hidden fixed inset-0 bg-black bg-opacity-50 z-30 hidden transition-opacity duration-300"></div>
          <aside id="sidebar" class="transform lg:transform-none lg:opacity-100 transition-all duration-300 fixed w-[280px] left-0 top-16 bottom-0 overflow-y-auto bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 -translate-x-full lg:translate-x-0 z-40 scrollbar-thin scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600">
            <Sidebar />
          </aside>
        </>
      )}
      
      <main class={`flex-1 min-h-[calc(100vh-4rem)] bg-gray-50 dark:bg-gray-900 w-full ${!isAuthPage ? 'lg:ml-[280px]' : ''}`}>
        <div class="container mx-auto p-2 sm:p-4 lg:p-6 max-w-[1200px] transition-opacity duration-200">
          {!isAuthPage && (
            <div class="mb-6">
              <Search />
            </div>
          )}
          <slot />
        </div>
      </main>
    </div>

    <script>
      // Get elements (in global scope)
      let mobileMenuButton = document.getElementById('mobile-menu-button');
      let sidebar = document.getElementById('sidebar');
      let sidebarOverlay = document.getElementById('sidebar-overlay');

      function initializeMobileMenu() {
        mobileMenuButton = document.getElementById('mobile-menu-button');
        sidebar = document.getElementById('sidebar');
        sidebarOverlay = document.getElementById('sidebar-overlay');

        // Remove existing listeners if any
        const oldButton = mobileMenuButton?.cloneNode(true);
        if (oldButton && mobileMenuButton?.parentNode) {
          mobileMenuButton.parentNode.replaceChild(oldButton, mobileMenuButton);
        }

        // Toggle sidebar function
        function toggleSidebar() {
          if (sidebar && sidebarOverlay) {
            const isHidden = sidebar.classList.contains('-translate-x-full');
            
            if (isHidden) {
              // Show sidebar
              sidebar.classList.remove('-translate-x-full');
              sidebarOverlay.classList.remove('hidden');
              document.body.classList.add('overflow-hidden');
            } else {
              // Hide sidebar
              sidebar.classList.add('-translate-x-full');
              sidebarOverlay.classList.add('hidden');
              document.body.classList.remove('overflow-hidden');
            }
          }
        }

        oldButton?.addEventListener('click', (e) => {
          e.stopPropagation();
          toggleSidebar();
        });

        sidebarOverlay?.addEventListener('click', toggleSidebar);

        // Close sidebar when clicking outside
        document.addEventListener('click', (e) => {
          if (window.innerWidth < 1024) {
            const target = e.target as HTMLElement;
            if (!sidebar?.contains(target) && !oldButton?.contains(target)) {
              sidebar?.classList.add('-translate-x-full');
              sidebarOverlay?.classList.add('hidden');
              document.body.classList.remove('overflow-hidden');
            }
          }
        });

        // Close sidebar on navigation
        document.addEventListener('astro:after-swap', () => {
          sidebar?.classList.add('-translate-x-full');
          sidebarOverlay?.classList.add('hidden');
          document.body.classList.remove('overflow-hidden');
        });
      }

      initializeMobileMenu();
      
      // Re-initialize after navigation
      window.addEventListener('popstate', () => {
        setTimeout(initializeMobileMenu, 0);
      });
      
      document.addEventListener('click', (e) => {
        const link = (e.target as HTMLElement).closest('a');
        if (link && link.href && link.href.startsWith(window.location.origin)) {
          setTimeout(initializeMobileMenu, 0);
        }
      });

      window.addEventListener('resize', () => {
        if (window.innerWidth >= 1024) {
          sidebar?.classList.remove('-translate-x-full');
          sidebarOverlay?.classList.add('hidden');
          document.body.classList.remove('overflow-hidden');
        } else {
          sidebar?.classList.add('-translate-x-full');
          sidebarOverlay?.classList.add('hidden');
        }
      });

      // Set initial state
      if (window.innerWidth < 1024) {
        sidebar?.classList.add('-translate-x-full');
        sidebarOverlay?.classList.add('hidden');
      }
    </script>

    <style is:global>
      :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
      }
      
      html {
        font-family: system-ui, sans-serif;
        scroll-behavior: smooth;
        background: white;
        color: #1a1a1a;
      }

      a {
        text-decoration: none !important;
      }

      .dark html {
        background: #0d1117;
        color: #ffffff;
      }
      
      body {
        margin: 0;
        padding: 0;
      }

      /* MDX Content Styles */
      .container h1 {
        @apply text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 sm:mb-6 text-gray-900 dark:text-white leading-tight;
      }

      .container h2 {
        @apply text-xl sm:text-2xl md:text-3xl font-semibold mt-8 sm:mt-10 mb-4 text-gray-800 dark:text-gray-100 leading-snug;
      }

      .container h3 {
        @apply text-lg sm:text-xl md:text-2xl font-semibold mt-6 sm:mt-8 mb-3 text-gray-700 dark:text-gray-200 leading-relaxed;
      }

      .container p {
        @apply text-sm sm:text-base text-gray-600 dark:text-gray-300 leading-relaxed mb-4 sm:mb-6;
      }

      .container ul, .container ol {
        @apply my-4 sm:my-6 pl-4 sm:pl-6 text-gray-600 dark:text-gray-300;
      }

      .container li {
        @apply mb-2 sm:mb-3 text-sm sm:text-base leading-relaxed;
      }

      .container pre {
        @apply p-4 sm:p-6 my-4 sm:my-6 bg-gray-50 dark:bg-gray-800 rounded-lg overflow-x-auto;
      }

      .container code {
        @apply font-mono text-sm sm:text-base text-gray-800 dark:text-gray-200;
      }

      /* Code Blocks */
      .container pre {
        background-color: #f7fafc;
        border-radius: 0.5rem;
        padding: 1rem;
        overflow-x: auto;
        margin: 1.5rem 0;
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 0.875rem;
        line-height: 1.7;
      }

      .dark .container pre {
        background-color: #1a202c;
      }

      .container code {
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
        font-size: 0.875rem;
        padding: 0.2rem 0.4rem;
        background-color: #edf2f7;
        border-radius: 0.25rem;
        color: #2d3748;
      }

      .dark .container code {
        color: #4e4e4e;
      }

      .container pre code {
        background-color: transparent;
        padding: 0;
        color: #1a202c;
      }

      .dark .container pre code {
        color: #e2e8f0;
      }

      /* Links */
      /* Removed it for testing purpose */

      /* .container a {
        color: #4c51bf;
        text-decoration: none;
        transition: color 0.2s ease;
      }

      .dark .container a {
        color: #fff;
      }

      .container a:hover {
        text-decoration: underline;
      } */

      /* Blockquotes */
      .container blockquote {
        border-left: 4px solid #e2e8f0;
        margin: 1.5rem 0;
        padding: 0.5rem 0 0.5rem 1rem;
        color: #718096;
        font-style: italic;
      }

      .dark .container blockquote {
        border-left-color: #4a5568;
        color: #a0aec0;
      }

      /* Tables */
      .container table {
        width: 100%;
        border-collapse: collapse;
        margin: 1.5rem 0;
      }

      .container th,
      .container td {
        padding: 0.75rem;
        border: 1px solid #e2e8f0;
        text-align: left;
      }

      .dark .container th,
      .dark .container td {
        border-color: #4a5568;
      }

      .container th {
        background-color: #f7fafc;
        font-weight: 600;
      }

      .dark .container th {
        background-color: #2d3748;
      }

      /* Custom Scrollbar */
      .scrollbar-thin {
        scrollbar-width: thin;
      }

      .scrollbar-thin::-webkit-scrollbar {
        width: 6px;
      }

      .scrollbar-thin::-webkit-scrollbar-track {
        background: transparent;
      }

      .scrollbar-thin::-webkit-scrollbar-thumb {
        background-color: rgba(156, 163, 175, 0.5);
        border-radius: 3px;
      }

      .dark .scrollbar-thin::-webkit-scrollbar-thumb {
        background-color: rgba(75, 85, 99, 0.5);
      }

      /* Transitions */
      .transition-all {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
    </style>
  </body>
</html>
