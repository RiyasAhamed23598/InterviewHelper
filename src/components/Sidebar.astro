---
const currentPath = Astro.url.pathname;

const menuItems = [
  {
    title: "Getting Started",
    icon: "fas fa-rocket",
    items: [
      { title: "Introduction", path: "/introduction" },
      { title: "Getting Started", path: "/getting-started" },
    ],
  },
  {
    title: "Guides",
    icon: "fas fa-book",
    items: [
      {
        title: "Implementing Pagefind Search",
        path: "/guides/pagefind-search",
      },
    ],
  },
  {
    title: "Frontend Development",
    icon: "fas fa-desktop",
    items: [
      {
        title: "Angular",
        icon: "fab fa-angular",
        items: [
          {
            title: "Basic Questions",
            items: [
              {
                title:
                  "What is Angular, and how is it different from AngularJS?",
                path: "/angular/what-is-angular",
              },
              {
                title: "Key features of Angular?",
                path: "/angular/key-features",
              },
              {
                title: "Explain Angular’s architecture.",
                path: "/angular/architecture",
              },
              {
                title: "Explain Angular’s new architecture.",
                path: "/angular/modern-architecture",
              },
              {
                title: "Purpose of TypeScript in Angular?",
                path: "/angular/typescript-purpose",
              },
              {
                title: "Components in Angular?",
                path: "/angular/components",
              },
              {
                title: "Data binding in Angular?",
                path: "/angular/data-binding",
              },
              {
                title: "What is a module in Angular?",
                path: "/angular/module",
              },
              {
                title: "What is Standalone Components?",
                path: "/angular/standalone-components",
              },
              {
                title: "Signals in angular?",
                path: "/angular/signals",
              },
              {
                title: "Angular CLI?",
                path: "/angular/angular-cli",
              },
              {
                title: "Decorators in Angular?",
                path: "/angular/decorators",
              },
              {
                title: "Directives in Angular?",
                path: "/angular/directives",
              },
            ],
          },
          {
            title: "Intermediate Questions",
            items: [
              {
                title: "What is angular's new control flow?",
                path: "/angular/control-flow",
              },
              {
                title: "What are @Input() and @Output() decorators?",
                path: "/angular/input-output",
              },
              {
                title: "Angular Pipes?",
                path: "/angular/pipes",
              },
              {
                title:
                  "What is the difference between Template-Driven Forms and Reactive Forms in Angular?",
                path: "/angular/forms",
              },
              {
                title:
                  "What are lifecycle hooks in Angular? Explain ngOnInit and ngOnDestroy",
                path: "/angular/lifecycle-hooks",
              },
              {
                title: "How is dependency injection implemented in Angular?",
                path: "/angular/dependency-injection",
              },
              {
                title: "What are Angular services, and how do you create one?",
                path: "/angular/services",
              },
              {
                title: "What is RxJS, and how is it used in Angular?",
                path: "/angular/rxjs",
              },
              {
                title:
                  "What are Observables, and how are they different from Promises?",
                path: "/angular/observables",
              },
            ],
          },
          {
            title: "Advanced Questions",
            items: [
              {
                title: "Explain about Content Projection in Angular?",
                path: "/angular/advanced/content-projection",
              },
              {
                title: "How do you manage state in an Angular application?",
                path: "/angular/state-management",
              },
              {
                title:
                  "What is the purpose of ViewChild and ContentChild in Angular?",
                path: "/angular/viewchild-contentchild",
              },
              {
                title:
                  "How do you optimize an Angular application for better performance?",
                path: "/angular/performance",
              },
              {
                title: "What is AOT (Ahead-of-Time) Compilation in Angular?",
                path: "/angular/aot-compilation",
              },
              {
                title:
                  "What is the difference between constructor and ngOnInit in a component?",
                path: "/angular/constructor-vs-ngoninit",
              },
              {
                title:
                  "What are Angular animations, and how are they implemented?",
                path: "/angular/animations",
              },
              {
                title:
                  "How does Angular handle error management and debugging?",
                path: "/angular/error-management",
              },
            ],
          },
          {
            title: "Scenario-Based Questions",
            items: [
              {
                title: "How would you debug a slow Angular app?",
                path: "/angular/debugging",
              },
              {
                title:
                  "How do you secure an Angular application from vulnerabilities like XSS and CSRF?",
                path: "/angular/security",
              },
              {
                title:
                  "How do you handle large datasets in Angular without compromising performance?",
                path: "/angular/large-datasets",
              },
              {
                title:
                  "Explain how you would implement dynamic forms in Angular?",
                path: "/angular/dynamic-forms",
              },
              {
                title:
                  "How do you handle multiple API calls simultaneously in Angular?",
                path: "/angular/multiple-api-calls",
              },
              {
                title:
                  "What would you do if a component’s ngOnInit is not executing?",
                path: "/angular/ngoninit-issues",
              },
              {
                title: "How would you share data between sibling components?",
                path: "/angular/component-communication",
              },
              {
                title:
                  "How do you ensure a component only loads after data is fetched from an API?",
                path: "/angular/component-lazy-load",
              },
              {
                title:
                  "What steps would you take to migrate an AngularJS project to Angular?",
                path: "/angular/migration-angularjs",
              },
            ],
          },
          {
            title: "Community Q&A",
            items: [
              {
                title: "Explain how do you setup the Routing in Angular?",
                path: "/angular/community/routing-setup",
              },
              {
                title:
                  "Describe how do you configure and access Route Parameters?",
                path: "/angular/community/routing-parameters",
              },
              {
                title:
                  "Explain how can you achieve page navigation in Angular?",
                path: "/angular/community/routing-navigation",
              },
              {
                title: "Explain the concept of lazy loading in Angular?",
                path: "/angular/community/routing-lazy-loading",
              },
              {
                title:
                  "Explain the difference between forRoot and forChild in Angular?",
                path: "/angular/community/routing-forroot-vs-forchild",
              },

              {
                title: "What are Angular Guards? Explain the different types.",
                path: "/angular/community/routing-guards-traditional",
              },
              {
                title:
                  "Can you explain what do understand by this route configuration in Angular?",
                path: "/angular/community/scenario/route-configuration",
              },
            ],
          },
        ],
      },

      {
        title: "React",
        icon: "fab fa-react",
        items: [
      {
        title: "Basic Questions",
        items: [
          {
            title: "What is React, and how does it differ from other JavaScript frameworks?",
            path: "/react/basic/what-is-react"
          },
          {
            title: "What are the key features of React?",
            path: "/react/basic/key-features"
          },
          {
            title: "What is JSX, and how does it work in React?",
            path: "/react/basic/what-is-jsx"
          },
          {
            title: "What is the Virtual DOM, and how does React use it?",
            path: "/react/basic/virtual-dom"
          },
          {
            title: "What are React components, and how do you create one?",
            path: "/react/basic/react-components"
          },
          {
            title: "What is the difference between functional and class components in React?",
            path: "/react/basic/functional-vs-class-components"
          },
          {
            title: "What are props in React, and how are they used?",
            path: "/react/basic/props-in-react"
          },
          {
            title: "What is state in React, and how do you manage it in a functional component?",
            path: "/react/basic/state-in-react"
          },
          {
            title: "What is the purpose of the useState hook in React?",
            path: "/react/basic/usestate-hook"
          },
          {
            title: "What are React lifecycle methods in class components?",
            path: "/react/basic/lifecycle-methods"
          },
          {
            title: "What is the difference between controlled and uncontrolled components in React?",
            path: "/react/basic/controlled-vs-uncontrolled-components"
          },
          {
            title: "What is the purpose of keys in React lists?",
            path: "/react/basic/keys-in-lists"
          },
          {
            title: "How do you handle events in React?",
            path: "/react/basic/handling-events"
          },
          {
            title: "What is conditional rendering in React, and how can you implement it?",
            path: "/react/basic/conditional-rendering"
          }
        ]
      },
      {
        title: "Intermediate Questions",
        items: [
          {
            title: "What are React Hooks, and why were they introduced?",
            path: "/react/intermediate/react-hooks"
          },
          {
            title: "Explain the useEffect hook and its common use cases.",
            path: "/react/intermediate/useeffect-hook"
          },
          {
            title: "What is the difference between useEffect and useLayoutEffect?",
            path: "/react/intermediate/useeffect-vs-uselayouteffect"
          },
          {
            title: "How can you create a custom hook in React?",
            path: "/react/intermediate/custom-hook"
          },
          {
            title: "What is the Context API, and how do you use it to manage state?",
            path: "/react/intermediate/context-api"
          },
          {
            title: "What is the purpose of the useReducer hook, and how does it compare to useState?",
            path: "/react/intermediate/usereducer-hook"
          },
          {
            title: "How do you handle forms in React with controlled components?",
            path: "/react/intermediate/handling-forms"
          },
          {
            title: "What are React Fragments, and why are they useful?",
            path: "/react/intermediate/react-fragments"
          },
          {
            title: "What is prop drilling, and how can you avoid it?",
            path: "/react/intermediate/prop-drilling"
          },
          {
            title: "What is the difference between lifting state up and using Context in React?",
            path: "/react/intermediate/lifting-state-vs-context"
          },
          {
            title: "How do you optimize rendering in React using React.memo?",
            path: "/react/intermediate/react-memo"
          },
          {
            title: "What are higher-order components (HOCs) in React?",
            path: "/react/intermediate/higher-order-components"
          },
          {
            title: "What is the purpose of the useCallback hook, and when should you use it?",
            path: "/react/intermediate/usecallback-hook"
          },
          {
            title: "What is the difference between useMemo and useCallback?",
            path: "/react/intermediate/usememo-vs-usecallback"
          }
        ]
      },
      {
        title: "Advanced Questions",
        items: [
          {
            title: "How does React's reconciliation process work under the hood?",
            path: "/react/advanced/reconciliation-process"
          },
          {
            title: "What are Concurrent Mode and Suspense in React, and how do they improve performance?",
            path: "/react/advanced/concurrent-mode-and-suspense"
          },
          {
            title: "How can you implement code-splitting in a React application?",
            path: "/react/advanced/code-splitting"
          },
          {
            title: "What are Error Boundaries in React, and how do you implement them?",
            path: "/react/advanced/error-boundaries"
          },
          {
            title: "How do you manage global state in a large React application?",
            path: "/react/advanced/global-state-management"
          },
          {
            title: "What is server-side rendering (SSR) in React, and how can you implement it with Next.js?",
            path: "/react/advanced/server-side-rendering"
          },
          {
            title: "What are the differences between client-side rendering (CSR) and server-side rendering (SSR)?",
            path: "/react/advanced/csr-vs-ssr"
          },
          {
            title: "How can you improve the performance of a React application with lazy loading?",
            path: "/react/advanced/lazy-loading"
          },
          {
            title: "What is the purpose of the useTransition hook in React 18?",
            path: "/react/advanced/usetransition-hook"
          },
          {
            title: "How does React handle batching of state updates, and how can you control it?",
            path: "/react/advanced/state-update-batching"
          },
          {
            title: "What are React Portals, and when should you use them?",
            path: "/react/advanced/react-portals"
          },
          {
            title: "How can you integrate React with Redux for state management?",
            path: "/react/advanced/react-with-redux"
          },
          {
            title: "What is the difference between Redux Toolkit and traditional Redux?",
            path: "/react/advanced/redux-toolkit-vs-traditional"
          },
          {
            title: "How do you test React components using Jest and React Testing Library?",
            path: "/react/advanced/testing-react-components"
          }
        ]
      }
    ]
      },
    ],
  },
  {
    title: "Backend Development",
    icon: "fas fa-server",
    items: [
      {
        title: ".NET",
        icon: "fas fa-cube",
        items: [
          {
            title: "Basic Questions",
            items: [
              {
            title: "What is .NET, and what are its key components?",
            path: "/dotnet/basic/what-is-dotnet"
          },
          {
            title: "What is the difference between .NET Framework and .NET Core?",
            path: "/dotnet/basic/dotnet-framework-vs-core"
          },
          {
            title: "What is the Common Language Runtime (CLR)?",
            path: "/dotnet/basic/common-language-runtime"
          },
          {
            title: "What is the purpose of MSIL (Microsoft Intermediate Language)?",
            path: "/dotnet/basic/msil-purpose"
          },
          {
            title: "Explain the concept of assemblies in .NET.",
            path: "/dotnet/basic/assemblies-in-dotnet"
          },
          {
            title: "What are the different types of assemblies in .NET?",
            path: "/dotnet/basic/types-of-assemblies"
          },
          {
            title: "What is the Global Assembly Cache (GAC)?",
            path: "/dotnet/basic/global-assembly-cache"
          },
          {
            title: "What is the difference between managed and unmanaged code?",
            path: "/dotnet/basic/managed-vs-unmanaged-code"
          },
          {
            title: "What is Garbage Collection in .NET, and how does it work?",
            path: "/dotnet/basic/garbage-collection"
          },
          {
            title: "What is a namespace in .NET?",
            path: "/dotnet/basic/namespace-in-dotnet"
          },
          {
            title: "What are the access modifiers in C#?",
            path: "/dotnet/basic/access-modifiers"
          },
          {
            title: "What is the difference between struct and class in C#?",
            path: "/dotnet/basic/struct-vs-class"
          },
          {
            title: "What is boxing and unboxing in .NET?",
            path: "/dotnet/basic/boxing-and-unboxing"
          },
          {
            title: "What is the purpose of the using statement in C#?",
            path: "/dotnet/basic/using-statement"
          }
        ]
      },
      {
        title: "Intermediate Questions",
        items: [
          {
            title: "What is the difference between IEnumerable and IQueryable in .NET?",
            path: "/dotnet/intermediate/ienumerable-vs-iqueryable"
          },
          {
            title: "What is dependency injection, and how is it implemented in .NET?",
            path: "/dotnet/intermediate/dependency-injection"
          },
          {
            title: "Explain the concept of middleware in ASP.NET Core.",
            path: "/dotnet/intermediate/middleware-in-aspnet-core"
          },
          {
            title: "What are the different hosting models in ASP.NET Core?",
            path: "/dotnet/intermediate/hosting-models"
          },
          {
            title: "What is Entity Framework, and what are its advantages?",
            path: "/dotnet/intermediate/entity-framework"
          },
          {
            title: "What is the difference between Code-First and Database-First approaches in Entity Framework?",
            path: "/dotnet/intermediate/code-first-vs-database-first"
          },
          {
            title: "What are LINQ queries, and how do they work in .NET?",
            path: "/dotnet/intermediate/linq-queries"
          },
          {
            title: "What is the purpose of async and await in C#?",
            path: "/dotnet/intermediate/async-await"
          },
          {
            title: "What are delegates in C#, and how are they used?",
            path: "/dotnet/intermediate/delegates-in-csharp"
          },
          {
            title: "What is the difference between Task and Thread in .NET?",
            path: "/dotnet/intermediate/task-vs-thread"
          },
          {
            title: "What are extension methods in C#?",
            path: "/dotnet/intermediate/extension-methods"
          },
          {
            title: "What is the purpose of IConfiguration in ASP.NET Core?",
            path: "/dotnet/intermediate/iconfiguration-purpose"
          },
          {
            title: "What are filters in ASP.NET Core, and how are they used?",
            path: "/dotnet/intermediate/filters-in-aspnet-core"
          },
          {
            title: "What is the difference between authentication and authorization in .NET?",
            path: "/dotnet/intermediate/authentication-vs-authorization"
          }
        ]
      },
      {
        title: "Advanced Questions",
        items: [
          {
            title: "What is the purpose of the Span<T> and Memory<T> types in .NET?",
            path: "/dotnet/advanced/span-and-memory"
          },
          {
            title: "How does the .NET garbage collector handle memory management in multi-generational heaps?",
            path: "/dotnet/advanced/garbage-collector-memory-management"
          },
          {
            title: "What are the differences between AOT (Ahead-of-Time) and JIT (Just-In-Time) compilation in .NET?",
            path: "/dotnet/advanced/aot-vs-jit-compilation"
          },
          {
            title: "How can you optimize the performance of an ASP.NET Core application?",
            path: "/dotnet/advanced/optimize-aspnet-core-performance"
          },
          {
            title: "What is the role of the ILogger interface in .NET, and how is logging implemented?",
            path: "/dotnet/advanced/ilogger-and-logging"
          },
          {
            title: "What are the differences between Blazor Server and Blazor WebAssembly?",
            path: "/dotnet/advanced/blazor-server-vs-webassembly"
          },
          {
            title: "How does .NET handle cross-platform development with .NET 8?",
            path: "/dotnet/advanced/cross-platform-dotnet8"
          },
          {
            title: "What are gRPC services, and how are they implemented in .NET?",
            path: "/dotnet/advanced/grpc-services"
          },
          {
            title: "How can you implement a custom middleware in ASP.NET Core?",
            path: "/dotnet/advanced/custom-middleware"
          },
          {
            title: "What is the purpose of the ValueTask type in .NET, and when should it be used?",
            path: "/dotnet/advanced/valuetask-purpose"
          }
        ]
      }
    ]
      },
      {
        title: "Node.js",
        icon: "fab fa-node-js",
        items: [
          {
            title: "Beginner",
            items: [
              {
                title: "What is a first class function in Javascript?",
                path: "/nodejs/beginner/first-class-function-in-js"
              },
              {
                title: "What is Node.js and how it works?",
                path: "/nodejs/beginner/how-nodejs-works"
              },
              {
                title: "How do you manage packages in your node.js project?",
                path: "/nodejs/beginner/manage-packages-in-nodejs"
              },
              {
                title: "How is Node.js better than other frameworks most popularly used?",
                path: "/nodejs/beginner/why-nodejs-better-than-others"
              },
              {
                title: "Explain the steps how “Control Flow” controls the function calls?",
                path: "/nodejs/beginner/control-flow-in-nodejs"
              },
              {
                title: "What are some commonly used timing features of Node.js?",
                path: "/nodejs/beginner/timing-features-in-nodejs"
              },
              {
                title: "What are the advantages of using promises instead of callbacks?",
                path: "/nodejs/beginner/advantages-of-promises"
              },
              {
                title: "What is fork in node JS?",
                path: "/nodejs/beginner/fork-in-nodejs"
              },
              {
                title: "Why is Node.js single-threaded?",
                path: "/nodejs/beginner/why-nodejs-single-threaded"
              },
              {
                title: "How do you create a simple server in Node.js that returns Hello World?",
                path: "/nodejs/beginner/simple-server-in-nodejs"
              },
              {
                title: "How many types of API functions are there in Node.js?",
                path: "/nodejs/beginner/types-of-api-functions"
              },
              {
                title: "What is REPL?",
                path: "/nodejs/beginner/what-is-repl"
              },
              {
                title: "List down the two arguments that async.queue takes as input?",
                path: "/nodejs/beginner/async-queue-arguments"
              },
              {
                title: "What is the purpose of module.exports?",
                path: "/nodejs/beginner/module-exports-purpose"
              },
              {
                title: "What tools can be used to assure consistent code style?",
                path: "/nodejs/beginner/tools-for-consistent-code-style"
              }
            ]
          },
          {
            title: "Intermediate",
            items: [
              {
                title: "What do you understand by callback hell?",
                path: "/nodejs/intermediate/callback-hell-in-nodejs"
              },
              {
                title: "What is an event-loop in Node JS?",
                path: "/nodejs/intermediate/event-loop-in-nodejs"
              },
              {
                title: "If Node.js is single threaded then how does it handle concurrency?",
                path: "/nodejs/intermediate/concurrency-in-nodejs"
              },
              {
                title: "Differentiate between process.nextTick() and setImmediate()?",
                path: "/nodejs/intermediate/process-nexttick-vs-setimmediate"
              },
              {
                title: "How does Node.js overcome the problem of blocking of I/O operations?",
                path: "/nodejs/intermediate/non-blocking-io-in-nodejs"
              },
              {
                title: "How can we use async await in node.js?",
                path: "/nodejs/intermediate/async-await-in-nodejs"
              },
              {
                title: "What is node.js streams?",
                path: "/nodejs/intermediate/nodejs-streams"
              },
              {
                title: "What are node.js buffers?",
                path: "/nodejs/intermediate/nodejs-buffers"
              },
              {
                title: "What is middleware?",
                path: "/nodejs/intermediate/what-is-middleware"
              },
              {
                title: "Explain what a Reactor Pattern in Node.js?",
                path: "/nodejs/intermediate/reactor-pattern-in-nodejs"
              },
              {
                title: "Why should you separate Express app and server?",
                path: "/nodejs/intermediate/separate-express-app-server"
              },
              {
                title: "For Node.js, why Google uses V8 engine?",
                path: "/nodejs/intermediate/google-v8-engine"
              },
              {
                title: "Describe the exit codes of Node.js?",
                path: "/nodejs/intermediate/nodejs-exit-codes"
              },
              {
                title: "Explain the concept of stub in Node.js?",
                path: "/nodejs/intermediate/concept-of-stub"
              }
            ]
          },
          {
            title: "Advanced",
            items: [
              {
                title: "What is an Event Emitter in Node.js?",
                path: "/nodejs/advanced/event-emitter-in-nodejs"
              },
              {
                title: "Enhancing Node.js performance through clustering.",
                path: "/nodejs/advanced/clustering-for-performance"
              },
              {
                title: "What is a thread pool and which library handles it in Node.js?",
                path: "/nodejs/advanced/thread-pool-in-nodejs"
              },
              {
                title: "What is WASI and why is it being introduced?",
                path: "/nodejs/advanced/what-is-wasi"
              },
              {
                title: "How are worker threads different from clusters?",
                path: "/nodejs/advanced/worker-threads-vs-clusters"
              },
              {
                title: "How to measure the duration of async operations?",
                path: "/nodejs/advanced/measure-async-duration"
              },
              {
                title: "How to measure the performance of async operations?",
                path: "/nodejs/advanced/measure-async-performance"
              }
            ]
    }
  ]
      },
      {
        title: "EfCore",
        icon: "fas fa-database",
        items: [
          {
            title: "Basic Questions",
            items: [
              {
                title: "Default lifetime of DbContext in DI?",
                path: "/efcore/basic/dbcontext-lifetime",
              },
              {
                title: "How can you create a database using EF?",
                path: "/efcore/basic/create-database",
              },
              {
                title:
                  "Does EF Core allow creating migrations for multiple databases?",
                path: "/efcore/basic/multiple-database-migrations",
              },
              {
                title: "How can you create multiple new entities in EF?",
                path: "/efcore/basic/create-multiple-entities",
              },
              {
                title: "How can you update an existing entity in EF?",
                path: "/efcore/basic/update-entity",
              },
              {
                title: "How can you delete an existing entity in EF?",
                path: "/efcore/basic/delete-entity",
              },
              {
                title: "How to seed a database with initial data in EF?",
                path: "/efcore/basic/database-seeding",
              },
              {
                title: "How to enable logging of SQL queries generated by EF?",
                path: "/efcore/basic/sql-query-logging",
              },
            ],
          },
          {
            title: "Intermediate Questions",
            items: [
              {
                title: "Explain how EF translates LINQ to SQL commands",
                path: "/efcore/intermediate/linq-to-sql",
              },
              {
                title:
                  "How can you use Scoped DbContext in a Singleton Service?",
                path: "/efcore/intermediate/scoped-dbcontext-singleton",
              },
              {
                title: "Explain how Pooling works in EF",
                path: "/efcore/intermediate/dbcontext-pooling",
              },
              {
                title: "Name 2 ways how to create a Pooled DbContext",
                path: "/efcore/intermediate/pooled-dbcontext",
              },
              {
                title: "When should you use DbContextFactory?",
                path: "/efcore/intermediate/dbcontextfactory",
              },
              {
                title:
                  "How would you execute database migrations on a production db?",
                path: "/efcore/intermediate/production-migrations",
              },
              {
                title: "What are EF Core Interceptors used for?",
                path: "/efcore/intermediate/interceptors",
              },
              {
                title: "How to implement soft deletion in EF?",
                path: "/efcore/intermediate/soft-delete",
              },
              {
                title:
                  "How can you update an existing entity without selecting it from the database?",
                path: "/efcore/intermediate/update-without-select",
              },
              {
                title:
                  "How can you delete an existing entity without selecting it from the database?",
                path: "/efcore/intermediate/delete-without-select",
              },
              {
                title: "How to manually create a database transaction in EF?",
                path: "/efcore/intermediate/manual-transactions",
              },
              {
                title: "Explain different transaction isolation levels",
                path: "/efcore/intermediate/transaction-isolation-levels",
              },
              {
                title: "How to implement Optimistic Locking in EF?",
                path: "/efcore/intermediate/optimistic-locking",
              },
              {
                title: "How to call a database view in EF?",
                path: "/efcore/intermediate/database-view",
              },
              {
                title: "How to call a stored procedure in EF?",
                path: "/efcore/intermediate/stored-procedure",
              },
              {
                title: "How to create a one-to-one relationship in EF?",
                path: "/efcore/intermediate/one-to-one",
              },
              {
                title: "How to create a one-to-many relationship in EF?",
                path: "/efcore/intermediate/one-to-many",
              },
              {
                title: "How to create a many-to-many relationship in EF?",
                path: "/efcore/intermediate/many-to-many",
              },
            ],
          },
          {
            title: "Advanced Questions",
            items: [
              {
                title: "What are Global Query Filters?",
                path: "/efcore/global-query-filters",
              },
              {
                title: "What is AsSplitQuery used for?",
                path: "/efcore/as-split-query",
              },
              {
                title: "What is the purpose of Compiled Queries?",
                path: "/efcore/compiled-queries",
              },
              {
                title: "Can you create Compiled async queries?",
                path: "/efcore/compiled-async-queries",
              },
              {
                title: "How to search data as IgnoreCase in EF?",
                path: "/efcore/ignorecase-search",
              },
              {
                title: "What are JSON columns?",
                path: "/efcore/json-columns",
              },
              {
                title: "How to implement Cascade deletion?",
                path: "/efcore/cascade-delete",
              },
              {
                title: "How can you implement audit trails in EF?",
                path: "/efcore/audit-trails",
              },
              {
                title: "How can you implement multitenancy in EF?",
                path: "/efcore/multitenancy",
              },
              {
                title: "Explain how Eager Loading works",
                path: "/efcore/eager-loading",
              },
              {
                title: "Explain how Explicit and Lazy Loading works",
                path: "/efcore/explicit-lazy-loading",
              },
              {
                title:
                  "Do you need a Repository and Unit Of Work pattern for EF?",
                path: "/efcore/repository-unitofwork",
              },
            ],
          },
        ],
      },
    ],
  },
  {
    title: "DevOps & Deployment",
    icon: "fas fa-cloud",
    items: [
      {
        title: "CI/CD",
        items: [
          { title: "GitHub Actions", path: "/devops/github-actions" },
          { title: "Azure DevOps", path: "/devops/azure-devops" },
          { title: "Docker", path: "/devops/docker" },
        ],
      },
    ],
  },
  {
    title: "Testing",
    icon: "fas fa-vial",
    items: [
      { title: "Unit Testing", path: "/testing/unit-testing" },
      { title: "Integration Testing", path: "/testing/integration-testing" },
      { title: "E2E Testing", path: "/testing/e2e-testing" },
    ],
  },
];
---

<nav class="py-3 lg:py-4">
  {
    menuItems.map((section, index) => (
      <div class="mb-1.5 lg:mb-2">
        <button
          class="w-full flex items-center justify-between px-3 lg:px-4 py-2 text-left text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200"
          data-section={`section-${index}`}
        >
          <div class="flex items-center">
            <i class={`${section.icon} w-4 lg:w-5 h-4 lg:h-5 mr-2`} />
            <span class="font-medium text-sm lg:text-base">
              {section.title}
            </span>
          </div>
          <i class="fas fa-chevron-down transform transition-transform duration-200 text-sm lg:text-base" />
        </button>

        <div
          class="hidden pl-3 lg:pl-4 mt-1 lg:mt-2 space-y-0.5 lg:space-y-1"
          id={`section-${index}-content`}
        >
          {section.items?.map((item, subIndex) => (
            <>
              {"items" in item ? (
                <div class="mb-1.5 lg:mb-2">
                  <button
                    class="w-full flex items-center justify-between px-3 lg:px-4 py-1.5 lg:py-2 text-left text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200"
                    data-section={`section-${index}-${subIndex}`}
                  >
                    <div class="flex items-center">
                      {"icon" in item && item.icon && (
                        <i
                          class={`${item.icon} w-3.5 lg:w-4 h-3.5 lg:h-4 mr-2`}
                        />
                      )}
                      <span class="font-medium text-xs lg:text-sm">
                        {item.title}
                      </span>
                    </div>
                    <i class="fas fa-chevron-down transform transition-transform duration-200 text-xs lg:text-sm" />
                  </button>

                  <div
                    class="hidden pl-3 lg:pl-4 mt-1 lg:mt-2 space-y-0.5 lg:space-y-1"
                    id={`section-${index}-${subIndex}-content`}
                  >
                    {item.items?.map((subItem, subSubIndex) => (
                      <>
                        {"items" in subItem ? (
                          <div class="mb-1.5 lg:mb-2">
                            <button
                              class="w-full flex items-center justify-between px-3 lg:px-4 py-1.5 lg:py-2 text-left text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors duration-200"
                              data-section={`section-${index}-${subIndex}-${subSubIndex}`}
                            >
                              <span class="font-medium text-xs lg:text-sm">
                                {subItem.title}
                              </span>
                              <i class="fas fa-chevron-down transform transition-transform duration-200 text-xs lg:text-sm" />
                            </button>

                            <div
                              class="hidden pl-3 lg:pl-4 mt-1 lg:mt-2 space-y-0.5 lg:space-y-1"
                              id={`section-${index}-${subIndex}-${subSubIndex}-content`}
                            >
                              {subItem.items?.map((subSubItem) => (
                                <a
                                  href={subSubItem.path}
                                  class={`block px-3 lg:px-4 py-1.5 lg:py-2 rounded-lg text-xs lg:text-sm transition-colors duration-200 ${
                                    currentPath.includes(subSubItem.path) ||
                                    currentPath === subSubItem.path
                                      ? "text-blue-600 dark:text-blue-500 bg-blue-50 dark:bg-blue-900/20"
                                      : "text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700"
                                  }`}
                                >
                                  {subSubItem.title}
                                </a>
                              ))}
                            </div>
                          </div>
                        ) : (
                          <a
                            href={subItem.path}
                            class={`block px-3 lg:px-4 py-1.5 lg:py-2 rounded-lg text-xs lg:text-sm transition-colors duration-200 ${
                              currentPath.includes(subItem.path) ||
                              currentPath === subItem.path
                                ? "text-blue-600 dark:text-blue-500 bg-blue-50 dark:bg-blue-900/20"
                                : "text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700"
                            }`}
                          >
                            {subItem.title}
                          </a>
                        )}
                      </>
                    ))}
                  </div>
                </div>
              ) : (
                <a
                  href={item.path}
                  class={`block px-3 lg:px-4 py-1.5 lg:py-2 rounded-lg text-xs lg:text-sm transition-colors duration-200 ${
                    currentPath.includes(item.path) || currentPath === item.path
                      ? "text-blue-600 dark:text-blue-500 bg-blue-50 dark:bg-blue-900/20"
                      : "text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700"
                  }`}
                >
                  {item.title}
                </a>
              )}
            </>
          ))}
        </div>
      </div>
    ))
  }
</nav>

<script>
  let sidebarState = new Map();

  // Load saved state from sessionStorage
  const savedState = sessionStorage.getItem("sidebarState");
  if (savedState) {
    sidebarState = new Map(JSON.parse(savedState));
  }

  function initializeSidebar() {
    const currentPath = window.location.pathname;
    const sectionButtons = document.querySelectorAll("[data-section]");

    sectionButtons.forEach((button) => {
      if (button.hasAttribute("data-initialized")) return;
      button.setAttribute("data-initialized", "true");

      const sectionId = button.getAttribute("data-section");
      const content = document.getElementById(`${sectionId}-content`);
      const chevron = button.querySelector(".fa-chevron-down");

      // Restore state or initialize based on current path
      if (sidebarState.has(sectionId)) {
        if (sidebarState.get(sectionId)) {
          content?.classList.remove("hidden");
          chevron?.classList.add("rotate-180");
        }
      } else {
        const hasActiveChild = content?.querySelector(
          `a[href="${currentPath}"]`
        );
        if (hasActiveChild) {
          content?.classList.remove("hidden");
          chevron?.classList.add("rotate-180");
          sidebarState.set(sectionId, true);

          // Expand parent sections
          let parentButton = button.parentElement?.closest("[data-section]");
          while (parentButton) {
            const parentId = parentButton.getAttribute("data-section");
            sidebarState.set(parentId, true);
            const parentContent = document.getElementById(
              `${parentId}-content`
            );
            const parentChevron =
              parentButton.querySelector(".fa-chevron-down");
            parentContent?.classList.remove("hidden");
            parentChevron?.classList.add("rotate-180");
            parentButton =
              parentButton.parentElement?.closest("[data-section]");
          }
        }
      }

      // Add click handler
      button.addEventListener("click", () => {
        const isExpanded = !content?.classList.toggle("hidden");
        chevron?.classList.toggle("rotate-180");
        sidebarState.set(sectionId, isExpanded);
        sessionStorage.setItem(
          "sidebarState",
          JSON.stringify(Array.from(sidebarState.entries()))
        );
      });
    });
  }

  // Initialize immediately
  initializeSidebar();

  // Re-initialize after navigation
  window.addEventListener("popstate", () => {
    setTimeout(initializeSidebar, 0);
  });

  // Handle clicks on links
  document.addEventListener("click", (e) => {
    const link = (e.target as HTMLElement).closest("a");
    if (link && link.href && link.href.startsWith(window.location.origin)) {
      setTimeout(initializeSidebar, 0);
    }
  });
</script>
