[
  {
    "question": "What is Angular Routing?",
    "options": {
      "A": "A mechanism for navigating between different components/views in an Angular application",
      "B": "A method for handling errors in an Angular application",
      "C": "A technique for optimizing performance in an Angular application",
      "D": "A strategy for testing routes in an Angular application"
    },
    "correct_answer": "A"
  },
  {
    "question": "What does Angular Routing enable?",
    "options": {
      "A": "Navigation between pages, Passing parameters, Guards for route protection, Lazy loading of modules, Child routes and route nesting",
      "B": "Error handling, Performance optimization, Testing routes",
      "C": "Data resolution, Preloading strategies",
      "D": "None of the above"
    },
    "correct_answer": "A"
  },
  {
    "question": "What is the purpose of route guards in Angular Routing?",
    "options": {
      "A": "To navigate between pages",
      "B": "To pass parameters",
      "C": "To protect routes",
      "D": "To enable lazy loading of modules"
    },
    "correct_answer": "C"
  },
  {
    "question": "What is lazy loading in the context of Angular Routing?",
    "options": {
      "A": "A method for handling errors",
      "B": "A technique for optimizing performance",
      "C": "A strategy for testing routes",
      "D": "A mechanism for loading modules as they are needed, rather than all at once"
    },
    "correct_answer": "D"
  },
  {
    "question": "What is the purpose of resolvers in Angular Routing?",
    "options": {
      "A": "To navigate between pages",
      "B": "To pass parameters",
      "C": "To protect routes",
      "D": "To resolve data before a route is activated"
    },
    "correct_answer": "D"
  },
  {
    "question": "What is the purpose of the 'path' property in a route configuration?",
    "options": {
      "A": "To specify the URL path for the route",
      "B": "To specify the component to load when the route is activated",
      "C": "To specify the data to resolve before the route is activated",
      "D": "To specify the guards for the route"
    },
    "correct_answer": "A"
  },
  {
    "question": "What is the purpose of the 'component' property in a route configuration?",
    "options": {
      "A": "To specify the URL path for the route",
      "B": "To specify the component to load when the route is activated",
      "C": "To specify the data to resolve before the route is activated",
      "D": "To specify the guards for the route"
    },
    "correct_answer": "B"
  },
  {
    "question": "What is the purpose of the 'resolve' property in a route configuration?",
    "options": {
      "A": "To specify the URL path for the route",
      "B": "To specify the component to load when the route is activated",
      "C": "To specify the data to resolve before the route is activated",
      "D": "To specify the guards for the route"
    },
    "correct_answer": "C"
  },
  {
    "question": "What is the purpose of the 'canActivate' property in a route configuration?",
    "options": {
      "A": "To specify the URL path for the route",
      "B": "To specify the component to load when the route is activated",
      "C": "To specify the data to resolve before the route is activated",
      "D": "To specify the guards for the route"
    },
    "correct_answer": "D"
  },
  {
    "question": "What is the purpose of the 'loadChildren' property in a route configuration?",
    "options": {
      "A": "To specify the URL path for the route",
      "B": "To specify the component to load when the route is activated",
      "C": "To specify the module to load lazily when the route is activated",
      "D": "To specify the guards for the route"
    },
    "correct_answer": "C"
  }
]