[
  {
    "question": "What is the main topic of the text?",
    "options": {
      "A": "How to build e-commerce dashboards",
      "B": "How to share data between sibling components in Angular",
      "C": "How to use TypeScript",
      "D": "How to use observables in Angular"
    },
    "correct_answer": "B"
  },
  {
    "question": "Which of the following methods is NOT mentioned in the text for sharing data between sibling components?",
    "options": {
      "A": "Shared Service with Signals",
      "B": "State Management (NgRx/Signal Store)",
      "C": "Event Bus Pattern",
      "D": "Child Component Communication"
    },
    "correct_answer": "D"
  },
  {
    "question": "What is the purpose of the 'SharedDataService' class in the provided code?",
    "options": {
      "A": "To manage the state of cart and wishlist items",
      "B": "To handle user authentication",
      "C": "To manage the state of all components",
      "D": "To handle database operations"
    },
    "correct_answer": "A"
  },
  {
    "question": "What does the 'EventBusService' class do in the provided code?",
    "options": {
      "A": "It manages the state of the application",
      "B": "It handles user authentication",
      "C": "It emits and listens to events",
      "D": "It handles database operations"
    },
    "correct_answer": "C"
  },
  {
    "question": "What is the purpose of the 'SharedState' class in the real-world example?",
    "options": {
      "A": "To manage the state of the application",
      "B": "To handle user authentication",
      "C": "To emit and listen to events",
      "D": "To handle database operations"
    },
    "correct_answer": "A"
  },
  {
    "question": "What is the main benefit of using the Event Bus Pattern according to the text?",
    "options": {
      "A": "Centralized state management",
      "B": "Decoupled communication",
      "C": "Predictable updates",
      "D": "Use of proper typing"
    },
    "correct_answer": "B"
  },
  {
    "question": "What is one of the best practices emphasized in the text?",
    "options": {
      "A": "Always use global variables",
      "B": "Avoid using observables",
      "C": "Unsubscribe from observables",
      "D": "Avoid error handling"
    },
    "correct_answer": "C"
  },
  {
    "question": "What is the main benefit of using Service-based Communication according to the text?",
    "options": {
      "A": "Decoupled communication",
      "B": "Centralized state management",
      "C": "Easy to debug",
      "D": "Single source of truth"
    },
    "correct_answer": "B"
  },
  {
    "question": "What is the main benefit of using State Management according to the text?",
    "options": {
      "A": "Decoupled communication",
      "B": "Centralized state management",
      "C": "Predictable updates",
      "D": "Easy to debug"
    },
    "correct_answer": "C"
  },
  {
    "question": "What is the main goal of the approach described in the text?",
    "options": {
      "A": "To build maintainable applications with clear communication patterns between components",
      "B": "To build applications with the highest performance",
      "C": "To build applications with the least amount of code",
      "D": "To build applications with the most advanced features"
    },
    "correct_answer": "A"
  }
]