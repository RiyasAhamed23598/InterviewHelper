[
  {
    "question": "What is lazy loading?",
    "options": {
      "A": "A design pattern that defers the loading of modules until they're actually needed.",
      "B": "A technique to load all modules at once.",
      "C": "A method to load modules in a sequential manner.",
      "D": "A strategy to load modules in a random order."
    },
    "correct_answer": "A"
  },
  {
    "question": "What are the benefits of lazy loading?",
    "options": {
      "A": "Increased initial bundle size and slower initial load time.",
      "B": "Reduced initial bundle size, faster initial load time, better resource utilization, improved application performance.",
      "C": "Increased resource utilization and slower application performance.",
      "D": "None of the above."
    },
    "correct_answer": "B"
  },
  {
    "question": "How do you implement lazy loading in Angular 17+?",
    "options": {
      "A": "Using standalone components and functional guards.",
      "B": "Using sequential loading of modules.",
      "C": "Using random loading of modules.",
      "D": "None of the above."
    },
    "correct_answer": "A"
  },
  {
    "question": "What is preloading in Angular?",
    "options": {
      "A": "A technique to load all modules at once.",
      "B": "A method to load modules in a sequential manner.",
      "C": "A strategy to load modules in a random order.",
      "D": "A strategy to load certain routes in the background while the user is browsing."
    },
    "correct_answer": "D"
  },
  {
    "question": "How do you optimize lazy loading performance in Angular?",
    "options": {
      "A": "By using route-level code splitting, component-level code splitting, and asset preloading service.",
      "B": "By loading all modules at once.",
      "C": "By loading modules in a sequential manner.",
      "D": "By loading modules in a random order."
    },
    "correct_answer": "A"
  },
  {
    "question": "What is the purpose of the 'loadChildren' property in Angular routing?",
    "options": {
      "A": "To specify the child routes of a module.",
      "B": "To specify the module to be loaded lazily.",
      "C": "To specify the parent route of a module.",
      "D": "None of the above."
    },
    "correct_answer": "B"
  },
  {
    "question": "What is the purpose of the 'canActivate' property in Angular routing?",
    "options": {
      "A": "To specify the child routes of a module.",
      "B": "To specify the module to be loaded lazily.",
      "C": "To specify the guards that must pass for this route to be activated.",
      "D": "None of the above."
    },
    "correct_answer": "C"
  },
  {
    "question": "What is the purpose of the 'path' property in Angular routing?",
    "options": {
      "A": "To specify the URL path for the route.",
      "B": "To specify the module to be loaded lazily.",
      "C": "To specify the guards that must pass for this route to be activated.",
      "D": "None of the above."
    },
    "correct_answer": "A"
  },
  {
    "question": "What is the purpose of the 'data' property in Angular routing?",
    "options": {
      "A": "To specify the URL path for the route.",
      "B": "To specify additional data for the route.",
      "C": "To specify the guards that must pass for this route to be activated.",
      "D": "None of the above."
    },
    "correct_answer": "B"
  },
  {
    "question": "What is the purpose of the 'providers' property in Angular configuration?",
    "options": {
      "A": "To specify the URL path for the route.",
      "B": "To specify additional data for the route.",
      "C": "To specify the guards that must pass for this route to be activated.",
      "D": "To specify the providers to be used in the application."
    },
    "correct_answer": "D"
  }
]